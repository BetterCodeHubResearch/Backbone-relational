{"version":3,"file":"backbone-relational.js","sources":["backbone-relational.js"],"sourcesContent":["import Backbone from 'backbone';\nimport _ from 'underscore';\n\nconst module = {};\n\nmodule.Collection = Backbone.Collection.extend();\nmodule.showWarnings = true;\n\n/**\n * Semaphore mixin; can be used as both binary and counting.\n **/\nmodule.Semaphore = {\n\t_permitsAvailable: null,\n\t_permitsUsed: 0,\n\n\tacquire: function() {\n\t\tif ( this._permitsAvailable && this._permitsUsed >= this._permitsAvailable ) {\n\t\t\tthrow new Error( 'Max permits acquired' );\n\t\t}\n\t\telse {\n\t\t\tthis._permitsUsed++;\n\t\t}\n\t},\n\n\trelease: function() {\n\t\tif ( this._permitsUsed === 0 ) {\n\t\t\tthrow new Error( 'All permits released' );\n\t\t}\n\t\telse {\n\t\t\tthis._permitsUsed--;\n\t\t}\n\t},\n\n\tisLocked: function() {\n\t\treturn this._permitsUsed > 0;\n\t},\n\n\tsetAvailablePermits: function( amount ) {\n\t\tif ( this._permitsUsed > amount ) {\n\t\t\tthrow new Error( 'Available permits cannot be less than used permits' );\n\t\t}\n\t\tthis._permitsAvailable = amount;\n\t}\n};\n\n/**\n * A BlockingQueue that accumulates items while blocked (via 'block'),\n * and processes them when unblocked (via 'unblock').\n * Process can also be called manually (via 'process').\n */\nmodule.BlockingQueue = function() {\n\tthis._queue = [];\n};\n_.extend( module.BlockingQueue.prototype, module.Semaphore, {\n\t_queue: null,\n\n\tadd: function( func ) {\n\t\tif ( this.isBlocked() ) {\n\t\t\tthis._queue.push( func );\n\t\t}\n\t\telse {\n\t\t\tfunc();\n\t\t}\n\t},\n\n\t// Some of the queued events may trigger other blocking events. By\n\t// copying the queue here it allows queued events to process closer to\n\t// the natural order.\n\t//\n\t// queue events [ 'A', 'B', 'C' ]\n\t// A handler of 'B' triggers 'D' and 'E'\n\t// By copying `this._queue` this executes:\n\t// [ 'A', 'B', 'D', 'E', 'C' ]\n\t// The same order the would have executed if they didn't have to be\n\t// delayed and queued.\n\tprocess: function() {\n\t\tvar queue = this._queue;\n\t\tthis._queue = [];\n\t\twhile ( queue && queue.length ) {\n\t\t\tqueue.shift()();\n\t\t}\n\t},\n\n\tblock: function() {\n\t\tthis.acquire();\n\t},\n\n\tunblock: function() {\n\t\tthis.release();\n\t\tif ( !this.isBlocked() ) {\n\t\t\tthis.process();\n\t\t}\n\t},\n\n\tisBlocked: function() {\n\t\treturn this.isLocked();\n\t}\n});\n/**\n * Global event queue. Accumulates external events ('add:<key>', 'remove:<key>' and 'change:<key>')\n * until the top-level object is fully initialized (see 'Backbone.Relational.Model').\n */\nmodule.eventQueue = new module.BlockingQueue();\n\n/**\n * Backbone.Store keeps track of all created (and destruction of) Backbone.Relational.Model.\n * Handles lookup for relations.\n */\nmodule.Store = function() {\n\tthis._collections = [];\n\tthis._reverseRelations = [];\n\tthis._orphanRelations = [];\n\tthis._subModels = [];\n\tthis._modelScopes = [ window ];\n};\n_.extend( module.Store.prototype, Backbone.Events, {\n\t/**\n\t * Create a new `Relation`.\n\t * @param {Backbone.Relational.Model} [model]\n\t * @param {Object} relation\n\t * @param {Object} [options]\n\t */\n\tinitializeRelation: function( model, relation, options ) {\n\t\tvar type = !_.isString( relation.type ) ? relation.type : module[ relation.type ] || this.getObjectByName( relation.type );\n\t\tif ( type && type.prototype instanceof module.Relation ) {\n\t\t\tvar rel = new type( model, relation, options ); // Also pushes the new Relation into `model._relations`\n\t\t}\n\t\telse {\n\t\t\tmodule.showWarnings && typeof console !== 'undefined' && console.warn( 'Relation=%o; missing or invalid relation type!', relation );\n\t\t}\n\t},\n\n\t/**\n\t * Add a scope for `getObjectByName` to look for model types by name.\n\t * @param {Object} scope\n\t */\n\taddModelScope: function( scope ) {\n\t\tthis._modelScopes.push( scope );\n\t},\n\n\t/**\n\t * Remove a scope.\n\t * @param {Object} scope\n\t */\n\tremoveModelScope: function( scope ) {\n\t\tthis._modelScopes = _.without( this._modelScopes, scope );\n\t},\n\n\t/**\n\t * Add a set of subModelTypes to the store, that can be used to resolve the '_superModel'\n\t * for a model later in 'setupSuperModel'.\n\t *\n\t * @param {Backbone.Relational.Model} subModelTypes\n\t * @param {Backbone.Relational.Model} superModelType\n\t */\n\taddSubModels: function( subModelTypes, superModelType ) {\n\t\tthis._subModels.push({\n\t\t\t'superModelType': superModelType,\n\t\t\t'subModels': subModelTypes\n\t\t});\n\t},\n\n\t/**\n\t * Check if the given modelType is registered as another model's subModel. If so, add it to the super model's\n\t * '_subModels', and set the modelType's '_superModel', '_subModelTypeName', and '_subModelTypeAttribute'.\n\t *\n\t * @param {Backbone.Relational.Model} modelType\n\t */\n\tsetupSuperModel: function( modelType ) {\n\t\t_.find( this._subModels, function( subModelDef ) {\n\t\t\treturn _.filter( subModelDef.subModels || [], function( subModelTypeName, typeValue ) {\n\t\t\t\tvar subModelType = this.getObjectByName( subModelTypeName );\n\n\t\t\t\tif ( modelType === subModelType ) {\n\t\t\t\t\t// Set 'modelType' as a child of the found superModel\n\t\t\t\t\tsubModelDef.superModelType._subModels[ typeValue ] = modelType;\n\n\t\t\t\t\t// Set '_superModel', '_subModelTypeValue', and '_subModelTypeAttribute' on 'modelType'.\n\t\t\t\t\tmodelType._superModel = subModelDef.superModelType;\n\t\t\t\t\tmodelType._subModelTypeValue = typeValue;\n\t\t\t\t\tmodelType._subModelTypeAttribute = subModelDef.superModelType.prototype.subModelTypeAttribute;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, this ).length;\n\t\t}, this );\n\t},\n\n\t/**\n\t * Add a reverse relation. Is added to the 'relations' property on model's prototype, and to\n\t * existing instances of 'model' in the store as well.\n\t * @param {Object} relation\n\t * @param {Backbone.Relational.Model} relation.model\n\t * @param {String} relation.type\n\t * @param {String} relation.key\n\t * @param {String|Object} relation.relatedModel\n\t */\n\taddReverseRelation: function( relation ) {\n\t\tvar exists = _.any( this._reverseRelations, function( rel ) {\n\t\t\treturn _.all( relation || [], function( val, key ) {\n\t\t\t\treturn val === rel[ key ];\n\t\t\t});\n\t\t});\n\n\t\tif ( !exists && relation.model && relation.type ) {\n\t\t\tthis._reverseRelations.push( relation );\n\t\t\tthis._addRelation( relation.model, relation );\n\t\t\tthis.retroFitRelation( relation );\n\t\t}\n\t},\n\n\t/**\n\t * Deposit a `relation` for which the `relatedModel` can't be resolved at the moment.\n\t *\n\t * @param {Object} relation\n\t */\n\taddOrphanRelation: function( relation ) {\n\t\tvar exists = _.any( this._orphanRelations, function( rel ) {\n\t\t\treturn _.all( relation || [], function( val, key ) {\n\t\t\t\treturn val === rel[ key ];\n\t\t\t});\n\t\t});\n\n\t\tif ( !exists && relation.model && relation.type ) {\n\t\t\tthis._orphanRelations.push( relation );\n\t\t}\n\t},\n\n\t/**\n\t * Try to initialize any `_orphanRelation`s\n\t */\n\tprocessOrphanRelations: function() {\n\t\t// Make sure to operate on a copy since we're removing while iterating\n\t\t_.each( this._orphanRelations.slice( 0 ), function( rel ) {\n\t\t\tvar relatedModel = module.store.getObjectByName( rel.relatedModel );\n\t\t\tif ( relatedModel ) {\n\t\t\t\tthis.initializeRelation( null, rel );\n\t\t\t\tthis._orphanRelations = _.without( this._orphanRelations, rel );\n\t\t\t}\n\t\t}, this );\n\t},\n\n\t/**\n\t *\n\t * @param {Backbone.Relational.Model.constructor} type\n\t * @param {Object} relation\n\t * @private\n\t */\n\t_addRelation: function( type, relation ) {\n\t\tif ( !type.prototype.relations ) {\n\t\t\ttype.prototype.relations = [];\n\t\t}\n\t\ttype.prototype.relations.push( relation );\n\n\t\t_.each( type._subModels || [], function( subModel ) {\n\t\t\tthis._addRelation( subModel, relation );\n\t\t}, this );\n\t},\n\n\t/**\n\t * Add a 'relation' to all existing instances of 'relation.model' in the store\n\t * @param {Object} relation\n\t */\n\tretroFitRelation: function( relation ) {\n\t\tvar coll = this.getCollection( relation.model, false );\n\t\tcoll && coll.each( function( model ) {\n\t\t\tif ( !( model instanceof relation.model ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar rel = new relation.type( model, relation );\n\t\t}, this );\n\t},\n\n\t/**\n\t * Find the Store's collection for a certain type of model.\n\t * @param {Backbone.Relational.Model} type\n\t * @param {Boolean} [create=true] Should a collection be created if none is found?\n\t * @return {module.Collection} A collection if found (or applicable for 'model'), or null\n\t */\n\tgetCollection: function( type, create ) {\n\t\tif ( type instanceof module.Model ) {\n\t\t\ttype = type.constructor;\n\t\t}\n\n\t\tvar rootModel = type;\n\t\twhile ( rootModel._superModel ) {\n\t\t\trootModel = rootModel._superModel;\n\t\t}\n\n\t\tvar coll = _.find( this._collections, function( item ) {\n\t\t\treturn item.model === rootModel;\n\t\t});\n\n\t\tif ( !coll && create !== false ) {\n\t\t\tcoll = this._createCollection( rootModel );\n\t\t}\n\n\t\treturn coll;\n\t},\n\n\t/**\n\t * Find a model type on one of the modelScopes by name. Names are split on dots.\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\tgetObjectByName: function( name ) {\n\t\tvar parts = name.split( '.' ),\n\t\t\ttype = null;\n\n\t\t_.find( this._modelScopes, function( scope ) {\n\t\t\ttype = _.reduce( parts || [], function( memo, val ) {\n\t\t\t\treturn memo ? memo[ val ] : undefined;\n\t\t\t}, scope );\n\n\t\t\tif ( type && type !== scope ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, this );\n\n\t\treturn type;\n\t},\n\n\t_createCollection: function( type ) {\n\t\tvar coll;\n\n\t\t// If 'type' is an instance, take its constructor\n\t\tif ( type instanceof module.Model ) {\n\t\t\ttype = type.constructor;\n\t\t}\n\n\t\t// Type should inherit from Backbone.Relational.Model.\n\t\tif ( type.prototype instanceof module.Model ) {\n\t\t\tcoll = new module.Collection();\n\t\t\tcoll.model = type;\n\n\t\t\tthis._collections.push( coll );\n\t\t}\n\n\t\treturn coll;\n\t},\n\n\t/**\n\t * Find the attribute that is to be used as the `id` on a given object\n\t * @param type\n\t * @param {String|Number|Object|Backbone.Relational.Model} item\n\t * @return {String|Number}\n\t */\n\tresolveIdForItem: function( type, item ) {\n\t\tvar id = _.isString( item ) || _.isNumber( item ) ? item : null;\n\n\t\tif ( id === null ) {\n\t\t\tif ( item instanceof module.Model ) {\n\t\t\t\tid = item.id;\n\t\t\t}\n\t\t\telse if ( _.isObject( item ) ) {\n\t\t\t\tid = item[ type.prototype.idAttribute ];\n\t\t\t}\n\t\t}\n\n\t\t// Make all falsy values `null` (except for 0, which could be an id.. see '/issues/179')\n\t\tif ( !id && id !== 0 ) {\n\t\t\tid = null;\n\t\t}\n\n\t\treturn id;\n\t},\n\n\t/**\n\t * Find a specific model of a certain `type` in the store\n\t * @param type\n\t * @param {String|Number|Object|Backbone.Relational.Model} item\n\t */\n\tfind: function( type, item ) {\n\t\tvar id = this.resolveIdForItem( type, item ),\n\t\t\tcoll = this.getCollection( type );\n\n\t\t// Because the found object could be of any of the type's superModel\n\t\t// types, only return it if it's actually of the type asked for.\n\t\tif ( coll ) {\n\t\t\tvar obj = coll.get( id );\n\n\t\t\tif ( obj instanceof type ) {\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Add a 'model' to its appropriate collection. Retain the original contents of 'model.collection'.\n\t * @param {Backbone.Relational.Model} model\n\t */\n\tregister: function( model ) {\n\t\tvar coll = this.getCollection( model );\n\n\t\tif ( coll ) {\n\t\t\tvar modelColl = model.collection;\n\t\t\tcoll.add( model );\n\t\t\tmodel.collection = modelColl;\n\t\t}\n\t},\n\n\t/**\n\t * Check if the given model may use the given `id`\n\t * @param model\n\t * @param [id]\n\t */\n\tcheckId: function( model, id ) {\n\t\tvar coll = this.getCollection( model ),\n\t\t\tduplicate = coll && coll.get( id );\n\n\t\tif ( duplicate && model !== duplicate ) {\n\t\t\tif ( module.showWarnings && typeof console !== 'undefined' ) {\n\t\t\t\tconsole.warn( 'Duplicate id! Old RelationalModel=%o, new RelationalModel=%o', duplicate, model );\n\t\t\t}\n\n\t\t\tthrow new Error( \"Cannot instantiate more than one Backbone.Relational.Model with the same id per type!\" );\n\t\t}\n\t},\n\n\t/**\n\t * Explicitly update a model's id in its store collection\n\t * @param {Backbone.Relational.Model} model\n\t */\n\tupdate: function( model ) {\n\t\tvar coll = this.getCollection( model );\n\n\t\t// Register a model if it isn't yet (which happens if it was created without an id).\n\t\tif ( !coll.contains( model ) ) {\n\t\t\tthis.register( model );\n\t\t}\n\n\t\t// This triggers updating the lookup indices kept in a collection\n\t\tcoll._onModelEvent( 'change:' + model.idAttribute, model, coll );\n\n\t\t// Trigger an event on model so related models (having the model's new id in their keyContents) can add it.\n\t\tmodel.trigger( 'relational:change:id', model, coll );\n\t},\n\n\t/**\n\t * Unregister from the store: a specific model, a collection, or a model type.\n\t * @param {Backbone.Relational.Model|Backbone.Relational.Model.constructor|module.Collection} type\n\t */\n\tunregister: function( type ) {\n\t\tvar coll,\n\t\t\tmodels;\n\n\t\tif ( type instanceof Backbone.Model ) {\n\t\t\tcoll = this.getCollection( type );\n\t\t\tmodels = [ type ];\n\t\t}\n\t\telse if ( type instanceof module.Collection ) {\n\t\t\tcoll = this.getCollection( type.model );\n\t\t\tmodels = _.clone( type.models );\n\t\t}\n\t\telse {\n\t\t\tcoll = this.getCollection( type );\n\t\t\tmodels = _.clone( coll.models );\n\t\t}\n\n\t\t_.each( models, function( model ) {\n\t\t\tthis.stopListening( model );\n\t\t\t_.invoke( model.getRelations(), 'stopListening' );\n\t\t}, this );\n\n\n\t\t// If we've unregistered an entire store collection, reset the collection (which is much faster).\n\t\t// Otherwise, remove each model one by one.\n\t\tif ( _.contains( this._collections, type ) ) {\n\t\t\tcoll.reset( [] );\n\t\t}\n\t\telse {\n\t\t\t_.each( models, function( model ) {\n\t\t\t\tif ( coll.get( model ) ) {\n\t\t\t\t\tcoll.remove( model );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcoll.trigger( 'relational:remove', model, coll );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\t},\n\n\t/**\n\t * Reset the `store` to it's original state. The `reverseRelations` are kept though, since attempting to\n\t * re-initialize these on models would lead to a large amount of warnings.\n\t */\n\treset: function() {\n\t\tthis.stopListening();\n\n\t\t// Unregister each collection to remove event listeners\n\t\t_.each( this._collections, function( coll ) {\n\t\t\tthis.unregister( coll );\n\t\t}, this );\n\n\t\tthis._collections = [];\n\t\tthis._subModels = [];\n\t\tthis._modelScopes = [ window ];\n\t}\n});\nmodule.store = new module.Store();\n\n/**\n * The main Relation class, from which 'HasOne' and 'HasMany' inherit. Internally, 'relational:<key>' events\n * are used to regulate addition and removal of models from relations.\n *\n * @param {Backbone.Relational.Model} [instance] Model that this relation is created for. If no model is supplied,\n *      Relation just tries to instantiate it's `reverseRelation` if specified, and bails out after that.\n * @param {Object} options\n * @param {string} options.key\n * @param {Backbone.Relational.Model.constructor} options.relatedModel\n * @param {Boolean|String} [options.includeInJSON=true] Serialize the given attribute for related model(s)' in toJSON, or just their ids.\n * @param {Boolean} [options.createModels=true] Create objects from the contents of keys if the object is not found in Backbone.store.\n * @param {Object} [options.reverseRelation] Specify a bi-directional relation. If provided, Relation will reciprocate\n *    the relation to the 'relatedModel'. Required and optional properties match 'options', except that it also needs\n *    {Backbone.Relation|String} type ('HasOne' or 'HasMany').\n * @param {Object} opts\n */\nmodule.Relation = function( instance, options, opts ) {\n\tthis.instance = instance;\n\t// Make sure 'options' is sane, and fill with defaults from subclasses and this object's prototype\n\toptions = _.isObject( options ) ? options : {};\n\tthis.reverseRelation = _.defaults( options.reverseRelation || {}, this.options.reverseRelation );\n\tthis.options = _.defaults( options, this.options, module.Relation.prototype.options );\n\n\tthis.reverseRelation.type = !_.isString( this.reverseRelation.type ) ? this.reverseRelation.type :\n\t\tmodule[ this.reverseRelation.type ] || module.store.getObjectByName( this.reverseRelation.type );\n\n\tthis.key = this.options.key;\n\tthis.keySource = this.options.keySource || this.key;\n\tthis.keyDestination = this.options.keyDestination || this.keySource || this.key;\n\n\tthis.model = this.options.model || this.instance.constructor;\n\n\tthis.relatedModel = this.options.relatedModel;\n\n\tif(_.isUndefined(this.relatedModel)){\n\t\tthis.relatedModel = this.model;\n\t}\n\n\tif ( _.isFunction( this.relatedModel ) && !( this.relatedModel.prototype instanceof module.Model ) ) {\n\t\tthis.relatedModel = _.result( this, 'relatedModel' );\n\t}\n\tif ( _.isString( this.relatedModel ) ) {\n\t\tthis.relatedModel = module.store.getObjectByName( this.relatedModel );\n\t}\n\n\tif ( !this.checkPreconditions() ) {\n\t\treturn;\n\t}\n\n\t// Add the reverse relation on 'relatedModel' to the store's reverseRelations\n\tif ( !this.options.isAutoRelation && this.reverseRelation.type && this.reverseRelation.key ) {\n\t\tmodule.store.addReverseRelation( _.defaults( {\n\t\t\t\tisAutoRelation: true,\n\t\t\t\tmodel: this.relatedModel,\n\t\t\t\trelatedModel: this.model,\n\t\t\t\treverseRelation: this.options // current relation is the 'reverseRelation' for its own reverseRelation\n\t\t\t},\n\t\t\tthis.reverseRelation // Take further properties from this.reverseRelation (type, key, etc.)\n\t\t) );\n\t}\n\n\tif ( instance ) {\n\t\tvar contentKey = this.keySource;\n\t\tif ( contentKey !== this.key && _.isObject( this.instance.get( this.key ) ) ) {\n\t\t\tcontentKey = this.key;\n\t\t}\n\n\t\tthis.setKeyContents( this.instance.get( contentKey ) );\n\t\tthis.relatedCollection = module.store.getCollection( this.relatedModel );\n\n\t\t// Explicitly clear 'keySource', to prevent a leaky abstraction if 'keySource' differs from 'key'.\n\t\tif ( this.keySource !== this.key ) {\n\t\t\tdelete this.instance.attributes[ this.keySource ];\n\t\t}\n\n\t\t// Add this Relation to instance._relations\n\t\tthis.instance._relations[ this.key ] = this;\n\n\t\tthis.initialize( opts );\n\n\t\tif ( this.options.autoFetch ) {\n\t\t\tthis.instance.getAsync( this.key, _.isObject( this.options.autoFetch ) ? this.options.autoFetch : {} );\n\t\t}\n\n\t\t// When 'relatedModel' are created or destroyed, check if it affects this relation.\n\t\tthis.listenTo( this.instance, 'destroy', this.destroy )\n\t\t\t.listenTo( this.relatedCollection, 'relational:add relational:change:id', this.tryAddRelated )\n\t\t\t.listenTo( this.relatedCollection, 'relational:remove', this.removeRelated );\n\t}\n};\n// Fix inheritance :\\\nmodule.Relation.extend = Backbone.Model.extend;\n// Set up all inheritable **Backbone.Relation** properties and methods.\n_.extend( module.Relation.prototype, Backbone.Events, module.Semaphore, {\n\toptions: {\n\t\tcreateModels: true,\n\t\tincludeInJSON: true,\n\t\tisAutoRelation: false,\n\t\tautoFetch: false,\n\t\tparse: false\n\t},\n\n\tinstance: null,\n\tkey: null,\n\tkeyContents: null,\n\trelatedModel: null,\n\trelatedCollection: null,\n\treverseRelation: null,\n\trelated: null,\n\n\t/**\n\t * Check several pre-conditions.\n\t * @return {Boolean} True if pre-conditions are satisfied, false if they're not.\n\t */\n\tcheckPreconditions: function() {\n\t\tvar i = this.instance,\n\t\t\tk = this.key,\n\t\t\tm = this.model,\n\t\t\trm = this.relatedModel,\n\t\t\twarn = module.showWarnings && typeof console !== 'undefined';\n\n\t\tif ( !m || !k || !rm ) {\n\t\t\twarn && console.warn( 'Relation=%o: missing model, key or relatedModel (%o, %o, %o).', this, m, k, rm );\n\t\t\treturn false;\n\t\t}\n\t\t// Check if the type in 'model' inherits from Backbone.Relational.Model\n\t\tif ( !( m.prototype instanceof module.Model ) ) {\n\t\t\twarn && console.warn( 'Relation=%o: model does not inherit from Backbone.Relational.Model (%o).', this, i );\n\t\t\treturn false;\n\t\t}\n\t\t// Check if the type in 'relatedModel' inherits from Backbone.Relational.Model\n\t\tif ( !( rm.prototype instanceof module.Model ) ) {\n\t\t\twarn && console.warn( 'Relation=%o: relatedModel does not inherit from Backbone.Relational.Model (%o).', this, rm );\n\t\t\treturn false;\n\t\t}\n\t\t// Check if this is not a HasMany, and the reverse relation is HasMany as well\n\t\tif ( this instanceof module.HasMany && this.reverseRelation.type === module.HasMany ) {\n\t\t\twarn && console.warn( 'Relation=%o: relation is a HasMany, and the reverseRelation is HasMany as well.', this );\n\t\t\treturn false;\n\t\t}\n\t\t// Check if we're not attempting to create a relationship on a `key` that's already used.\n\t\tif ( i && _.keys( i._relations ).length ) {\n\t\t\tvar existing = _.find( i._relations, function( rel ) {\n\t\t\t\treturn rel.key === k;\n\t\t\t}, this );\n\n\t\t\tif ( existing ) {\n\t\t\t\twarn && console.warn( 'Cannot create relation=%o on %o for model=%o: already taken by relation=%o.',\n\t\t\t\t\tthis, k, i, existing );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Set the related model(s) for this relation\n\t * @param {Backbone.Model|module.Collection} related\n\t */\n\tsetRelated: function( related ) {\n\t\tthis.related = related;\n\t\tthis.instance.attributes[ this.key ] = related;\n\t},\n\n\t/**\n\t * Determine if a relation (on a different RelationalModel) is the reverse\n\t * relation of the current one.\n\t * @param {Backbone.Relation} relation\n\t * @return {Boolean}\n\t */\n\t_isReverseRelation: function( relation ) {\n\t\treturn relation.instance instanceof this.relatedModel && this.reverseRelation.key === relation.key &&\n\t\t\tthis.key === relation.reverseRelation.key;\n\t},\n\n\t/**\n\t * Get the reverse relations (pointing back to 'this.key' on 'this.instance') for the currently related model(s).\n\t * @param {Backbone.Relational.Model} [model] Get the reverse relations for a specific model.\n\t *    If not specified, 'this.related' is used.\n\t * @return {Backbone.Relation[]}\n\t */\n\tgetReverseRelations: function( model ) {\n\t\tvar reverseRelations = [];\n\t\t// Iterate over 'model', 'this.related.models' (if this.related is a module.Collection), or wrap 'this.related' in an array.\n\t\tvar models = !_.isUndefined( model ) ? [ model ] : this.related && ( this.related.models || [ this.related ] ),\n\t\t\trelations = null,\n\t\t\trelation = null;\n\n\t\tfor( var i = 0; i < ( models || [] ).length; i++ ) {\n\t\t\trelations = models[ i ].getRelations() || [];\n\n\t\t\tfor( var j = 0; j < relations.length; j++ ) {\n\t\t\t\trelation = relations[ j ];\n\n\n\t\t\t\tif ( this._isReverseRelation( relation ) ) {\n\t\t\t\t\treverseRelations.push( relation );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn reverseRelations;\n\t},\n\n\t/**\n\t * When `this.instance` is destroyed, cleanup our relations.\n\t * Get reverse relation, call removeRelated on each.\n\t */\n\tdestroy: function() {\n\t\tthis.stopListening();\n\n\t\tif ( this instanceof module.HasOne ) {\n\t\t\tthis.setRelated( null );\n\t\t}\n\t\telse if ( this instanceof module.HasMany ) {\n\t\t\tthis.setRelated( this._prepareCollection() );\n\t\t}\n\n\t\t_.each( this.getReverseRelations(), function( relation ) {\n\t\t\trelation.removeRelated( this.instance );\n\t\t}, this );\n\t}\n});\n\nmodule.HasOne = module.Relation.extend({\n\toptions: {\n\t\treverseRelation: { type: 'HasMany' }\n\t},\n\n\tinitialize: function( opts ) {\n\t\tthis.listenTo( this.instance, 'relational:change:' + this.key, this.onChange );\n\n\t\tvar related = this.findRelated( opts );\n\t\tthis.setRelated( related );\n\n\t\t// Notify new 'related' object of the new relation.\n\t\t_.each( this.getReverseRelations(), function( relation ) {\n\t\t\trelation.addRelated( this.instance, opts );\n\t\t}, this );\n\t},\n\n\t/**\n\t * Find related Models.\n\t * @param {Object} [options]\n\t * @return {Backbone.Model}\n\t */\n\tfindRelated: function( options ) {\n\t\tvar related = null;\n\n\t\toptions = _.defaults( { parse: this.options.parse }, options );\n\n\t\tif ( this.keyContents instanceof this.relatedModel ) {\n\t\t\trelated = this.keyContents;\n\t\t}\n\t\telse if ( this.keyContents || this.keyContents === 0 ) { // since 0 can be a valid `id` as well\n\t\t\tvar opts = _.defaults( { create: this.options.createModels }, options );\n\t\t\trelated = this.relatedModel.findOrCreate( this.keyContents, opts );\n\t\t}\n\n\t\t// Nullify `keyId` if we have a related model; in case it was already part of the relation\n\t\tif ( related ) {\n\t\t\tthis.keyId = null;\n\t\t}\n\n\t\treturn related;\n\t},\n\n\t/**\n\t * Normalize and reduce `keyContents` to an `id`, for easier comparison\n\t * @param {String|Number|Backbone.Model} keyContents\n\t */\n\tsetKeyContents: function( keyContents ) {\n\t\tthis.keyContents = keyContents;\n\t\tthis.keyId = module.store.resolveIdForItem( this.relatedModel, this.keyContents );\n\t},\n\n\t/**\n\t * Event handler for `change:<key>`.\n\t * If the key is changed, notify old & new reverse relations and initialize the new relation.\n\t */\n\tonChange: function( model, attr, options ) {\n\t\t// Don't accept recursive calls to onChange (like onChange->findRelated->findOrCreate->initializeRelations->addRelated->onChange)\n\t\tif ( this.isLocked() ) {\n\t\t\treturn;\n\t\t}\n\t\tthis.acquire();\n\t\toptions = options ? _.clone( options ) : {};\n\n\t\t// 'options.__related' is set by 'addRelated'/'removeRelated'. If it is set, the change\n\t\t// is the result of a call from a relation. If it's not, the change is the result of\n\t\t// a 'set' call on this.instance.\n\t\tvar changed = _.isUndefined( options.__related ),\n\t\t\toldRelated = changed ? this.related : options.__related;\n\n\t\tif ( changed ) {\n\t\t\tthis.setKeyContents( attr );\n\t\t\tvar related = this.findRelated( options );\n\t\t\tthis.setRelated( related );\n\t\t}\n\n\t\t// Notify old 'related' object of the terminated relation\n\t\tif ( oldRelated && this.related !== oldRelated ) {\n\t\t\t_.each( this.getReverseRelations( oldRelated ), function( relation ) {\n\t\t\t\trelation.removeRelated( this.instance, null, options );\n\t\t\t}, this );\n\t\t}\n\n\t\t// Notify new 'related' object of the new relation. Note we do re-apply even if this.related is oldRelated;\n\t\t// that can be necessary for bi-directional relations if 'this.instance' was created after 'this.related'.\n\t\t// In that case, 'this.instance' will already know 'this.related', but the reverse might not exist yet.\n\t\t_.each( this.getReverseRelations(), function( relation ) {\n\t\t\trelation.addRelated( this.instance, options );\n\t\t}, this );\n\n\t\t// Fire the 'change:<key>' event if 'related' was updated\n\t\tif ( !options.silent && this.related !== oldRelated ) {\n\t\t\tvar dit = this;\n\t\t\tthis.changed = true;\n\t\t\tmodule.eventQueue.add( function() {\n\t\t\t\tdit.instance.trigger( 'change:' + dit.key, dit.instance, dit.related, options, true );\n\t\t\t\tdit.changed = false;\n\t\t\t});\n\t\t}\n\t\tthis.release();\n\t},\n\n\t/**\n\t * If a new 'this.relatedModel' appears in the 'store', try to match it to the last set 'keyContents'\n\t */\n\ttryAddRelated: function( model, coll, options ) {\n\t\tif ( ( this.keyId || this.keyId === 0 ) && model.id === this.keyId ) { // since 0 can be a valid `id` as well\n\t\t\tthis.addRelated( model, options );\n\t\t\tthis.keyId = null;\n\t\t}\n\t},\n\n\taddRelated: function( model, options ) {\n\t\t// Allow 'model' to set up its relations before proceeding.\n\t\t// (which can result in a call to 'addRelated' from a relation of 'model')\n\t\tvar dit = this;\n\t\tmodel.queue( function() {\n\t\t\tif ( model !== dit.related ) {\n\t\t\t\tvar oldRelated = dit.related || null;\n\t\t\t\tdit.setRelated( model );\n\t\t\t\tdit.onChange( dit.instance, model, _.defaults( { __related: oldRelated }, options ) );\n\t\t\t}\n\t\t});\n\t},\n\n\tremoveRelated: function( model, coll, options ) {\n\t\tif ( !this.related ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( model === this.related ) {\n\t\t\tvar oldRelated = this.related || null;\n\t\t\tthis.setRelated( null );\n\t\t\tthis.onChange( this.instance, model, _.defaults( { __related: oldRelated }, options ) );\n\t\t}\n\t}\n});\n\nmodule.HasMany = module.Relation.extend({\n\tcollectionType: null,\n\n\toptions: {\n\t\treverseRelation: { type: 'HasOne' },\n\t\tcollectionType: module.Collection,\n\t\tcollectionKey: true,\n\t\tcollectionOptions: {}\n\t},\n\n\tinitialize: function( opts ) {\n\t\tthis.listenTo( this.instance, 'relational:change:' + this.key, this.onChange );\n\n\t\t// Handle a custom 'collectionType'\n\t\tthis.collectionType = this.options.collectionType;\n\t\tif ( _.isFunction( this.collectionType ) && this.collectionType !== module.Collection && !( this.collectionType.prototype instanceof module.Collection ) ) {\n\t\t\tthis.collectionType = _.result( this, 'collectionType' );\n\t\t}\n\t\tif ( _.isString( this.collectionType ) ) {\n\t\t\tthis.collectionType = module.store.getObjectByName( this.collectionType );\n\t\t}\n\t\tif ( this.collectionType !== module.Collection && !( this.collectionType.prototype instanceof module.Collection ) ) {\n\t\t\tthrow new Error( '`collectionType` must inherit from module.Collection' );\n\t\t}\n\n\t\tvar related = this.findRelated( opts );\n\t\tthis.setRelated( related );\n\t},\n\n\t/**\n\t * Bind events and setup collectionKeys for a collection that is to be used as the backing store for a HasMany.\n\t * If no 'collection' is supplied, a new collection will be created of the specified 'collectionType' option.\n\t * @param {module.Collection} [collection]\n\t * @return {module.Collection}\n\t */\n\t_prepareCollection: function( collection ) {\n\t\tif ( this.related ) {\n\t\t\tthis.stopListening( this.related );\n\t\t}\n\n\t\tif ( !collection || !( collection instanceof module.Collection ) ) {\n\t\t\tvar options = _.isFunction( this.options.collectionOptions ) ?\n\t\t\t\tthis.options.collectionOptions( this.instance ) : this.options.collectionOptions;\n\n\t\t\tcollection = new this.collectionType( null, options );\n\t\t}\n\n\t\tcollection.model = this.relatedModel;\n\n\t\tif ( this.options.collectionKey ) {\n\t\t\tvar key = this.options.collectionKey === true ? this.options.reverseRelation.key : this.options.collectionKey;\n\n\t\t\tif ( collection[ key ] && collection[ key ] !== this.instance ) {\n\t\t\t\tif ( module.showWarnings && typeof console !== 'undefined' ) {\n\t\t\t\t\tconsole.warn( 'Relation=%o; collectionKey=%s already exists on collection=%o', this, key, this.options.collectionKey );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( key ) {\n\t\t\t\tcollection[ key ] = this.instance;\n\t\t\t}\n\t\t}\n\n\t\tthis.listenTo( collection, 'relational:add', this.handleAddition )\n\t\t\t.listenTo( collection, 'relational:remove', this.handleRemoval )\n\t\t\t.listenTo( collection, 'relational:reset', this.handleReset );\n\n\t\treturn collection;\n\t},\n\n\t/**\n\t * Find related Models.\n\t * @param {Object} [options]\n\t * @return {module.Collection}\n\t */\n\tfindRelated: function( options ) {\n\t\tvar related = null;\n\n\t\toptions = _.defaults( { parse: this.options.parse }, options );\n\n\t\t// Replace 'this.related' by 'this.keyContents' if it is a module.Collection\n\t\tif ( this.keyContents instanceof module.Collection ) {\n\t\t\tthis._prepareCollection( this.keyContents );\n\t\t\trelated = this.keyContents;\n\t\t}\n\t\t// Otherwise, 'this.keyContents' should be an array of related object ids.\n\t\t// Re-use the current 'this.related' if it is a module.Collection; otherwise, create a new collection.\n\t\telse {\n\t\t\tvar toAdd = [];\n\n\t\t\t_.each( this.keyContents, function( attributes ) {\n\t\t\t\tvar model = null;\n\n\t\t\t\tif ( attributes instanceof this.relatedModel ) {\n\t\t\t\t\tmodel = attributes;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If `merge` is true, update models here, instead of during update.\n\t\t\t\t\tmodel = ( _.isObject( attributes ) && options.parse && this.relatedModel.prototype.parse ) ?\n\t\t\t\t\t\tthis.relatedModel.prototype.parse( _.clone( attributes ), options ) : attributes;\n\t\t\t\t}\n\n\t\t\t\tmodel && toAdd.push( model );\n\t\t\t}, this );\n\n\t\t\tif ( this.related instanceof module.Collection ) {\n\t\t\t\trelated = this.related;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trelated = this._prepareCollection();\n\t\t\t}\n\n\t\t\t// By now, `parse` will already have been executed just above for models if specified.\n\t\t\t// Disable to prevent additional calls.\n\t\t\trelated.set( toAdd, _.defaults( { parse: false }, options ) );\n\t\t}\n\n\t\t// Remove entries from `keyIds` that were already part of the relation (and are thus 'unchanged')\n\t\tthis.keyIds = _.difference( this.keyIds, _.pluck( related.models, 'id' ) );\n\n\t\treturn related;\n\t},\n\n\t/**\n\t * Normalize and reduce `keyContents` to a list of `ids`, for easier comparison\n\t * @param {String|Number|String[]|Number[]|module.Collection} keyContents\n\t */\n\tsetKeyContents: function( keyContents ) {\n\t\tthis.keyContents = keyContents instanceof module.Collection ? keyContents : null;\n\t\tthis.keyIds = [];\n\n\t\tif ( !this.keyContents && ( keyContents || keyContents === 0 ) ) { // since 0 can be a valid `id` as well\n\t\t\t// Handle cases the an API/user supplies just an Object/id instead of an Array\n\t\t\tthis.keyContents = _.isArray( keyContents ) ? keyContents : [ keyContents ];\n\n\t\t\t_.each( this.keyContents, function( item ) {\n\t\t\t\tvar itemId = module.store.resolveIdForItem( this.relatedModel, item );\n\t\t\t\tif ( itemId || itemId === 0 ) {\n\t\t\t\t\tthis.keyIds.push( itemId );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\t},\n\n\t/**\n\t * Event handler for `change:<key>`.\n\t * If the contents of the key are changed, notify old & new reverse relations and initialize the new relation.\n\t */\n\tonChange: function( model, attr, options ) {\n\t\toptions = options ? _.clone( options ) : {};\n\t\tthis.setKeyContents( attr );\n\t\tthis.changed = false;\n\n\t\tvar related = this.findRelated( options );\n\t\tthis.setRelated( related );\n\n\t\tif ( !options.silent ) {\n\t\t\tvar dit = this;\n\t\t\tmodule.eventQueue.add( function() {\n\t\t\t\t// The `changed` flag can be set in `handleAddition` or `handleRemoval`\n\t\t\t\tif ( dit.changed ) {\n\t\t\t\t\tdit.instance.trigger( 'change:' + dit.key, dit.instance, dit.related, options, true );\n\t\t\t\t\tdit.changed = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * When a model is added to a 'HasMany', trigger 'add' on 'this.instance' and notify reverse relations.\n\t * (should be 'HasOne', must set 'this.instance' as their related).\n\t */\n\thandleAddition: function( model, coll, options ) {\n\t\t//console.debug('handleAddition called; args=%o', arguments);\n\t\toptions = options ? _.clone( options ) : {};\n\t\tthis.changed = true;\n\n\t\t_.each( this.getReverseRelations( model ), function( relation ) {\n\t\t\trelation.addRelated( this.instance, options );\n\t\t}, this );\n\n\t\t// Only trigger 'add' once the newly added model is initialized (so, has its relations set up)\n\t\tvar dit = this;\n\t\t!options.silent && module.eventQueue.add( function() {\n\t\t\tdit.instance.trigger( 'add:' + dit.key, model, dit.related, options );\n\t\t});\n\t},\n\n\t/**\n\t * When a model is removed from a 'HasMany', trigger 'remove' on 'this.instance' and notify reverse relations.\n\t * (should be 'HasOne', which should be nullified)\n\t */\n\thandleRemoval: function( model, coll, options ) {\n\t\t//console.debug('handleRemoval called; args=%o', arguments);\n\t\toptions = options ? _.clone( options ) : {};\n\t\tthis.changed = true;\n\n\t\t_.each( this.getReverseRelations( model ), function( relation ) {\n\t\t\trelation.removeRelated( this.instance, null, options );\n\t\t}, this );\n\n\t\tvar dit = this;\n\t\t!options.silent && module.eventQueue.add( function() {\n\t\t\tdit.instance.trigger( 'remove:' + dit.key, model, dit.related, options );\n\t\t});\n\t},\n\n\thandleReset: function( coll, options ) {\n\t\tvar dit = this;\n\t\toptions = options ? _.clone( options ) : {};\n\t\t!options.silent && module.eventQueue.add( function() {\n\t\t\tdit.instance.trigger( 'reset:' + dit.key, dit.related, options );\n\t\t});\n\t},\n\n\ttryAddRelated: function( model, coll, options ) {\n\t\tvar item = _.contains( this.keyIds, model.id );\n\n\t\tif ( item ) {\n\t\t\tthis.addRelated( model, options );\n\t\t\tthis.keyIds = _.without( this.keyIds, model.id );\n\t\t}\n\t},\n\n\taddRelated: function( model, options ) {\n\t\t// Allow 'model' to set up its relations before proceeding.\n\t\t// (which can result in a call to 'addRelated' from a relation of 'model')\n\t\tvar dit = this;\n\t\tmodel.queue( function() {\n\t\t\tif ( dit.related && !dit.related.get( model ) ) {\n\t\t\t\tdit.related.add( model, _.defaults( { parse: false }, options ) );\n\t\t\t}\n\t\t});\n\t},\n\n\tremoveRelated: function( model, coll, options ) {\n\t\tif ( this.related.get( model ) ) {\n\t\t\tthis.related.remove( model, options );\n\t\t}\n\t}\n});\n\n/**\n * A type of Backbone.Model that also maintains relations to other models and collections.\n * New events when compared to the original:\n *  - 'add:<key>' (model, related collection, options)\n *  - 'remove:<key>' (model, related collection, options)\n *  - 'change:<key>' (model, related model or collection, options)\n */\nmodule.Model = Backbone.Model.extend({\n\trelations: null, // Relation descriptions on the prototype\n\t_relations: null, // Relation instances\n\t_isInitialized: false,\n\t_deferProcessing: false,\n\t_queue: null,\n\t_attributeChangeFired: false, // Keeps track of `change` event firing under some conditions (like nested `set`s)\n\n\tsubModelTypeAttribute: 'type',\n\tsubModelTypes: null,\n\n\tconstructor: function( attributes, options ) {\n\t\t// Nasty hack, for cases like 'model.get( <HasMany key> ).add( item )'.\n\t\t// Defer 'processQueue', so that when 'Relation.createModels' is used we trigger 'HasMany'\n\t\t// collection events only after the model is really fully set up.\n\t\t// Example: event for \"p.on( 'add:jobs' )\" -> \"p.get('jobs').add( { company: c.id, person: p.id } )\".\n\t\tif ( options && options.collection ) {\n\t\t\tvar dit = this,\n\t\t\t\tcollection = this.collection = options.collection;\n\n\t\t\t// Prevent `collection` from cascading down to nested models; they shouldn't go into this `if` clause.\n\t\t\tdelete options.collection;\n\n\t\t\tthis._deferProcessing = true;\n\n\t\t\tvar processQueue = function( model ) {\n\t\t\t\tif ( model === dit ) {\n\t\t\t\t\tdit._deferProcessing = false;\n\t\t\t\t\tdit.processQueue();\n\t\t\t\t\tcollection.off( 'relational:add', processQueue );\n\t\t\t\t}\n\t\t\t};\n\t\t\tcollection.on( 'relational:add', processQueue );\n\n\t\t\t// So we do process the queue eventually, regardless of whether this model actually gets added to 'options.collection'.\n\t\t\t_.defer( function() {\n\t\t\t\tprocessQueue( dit );\n\t\t\t});\n\t\t}\n\n\t\tmodule.store.processOrphanRelations();\n\t\tmodule.store.listenTo( this, 'relational:unregister', module.store.unregister );\n\n\t\tthis._queue = new module.BlockingQueue();\n\t\tthis._queue.block();\n\t\tmodule.eventQueue.block();\n\n\t\ttry {\n\t\t\tBackbone.Model.apply( this, arguments );\n\t\t}\n\t\tfinally {\n\t\t\t// Try to run the global queue holding external events\n\t\t\tmodule.eventQueue.unblock();\n\t\t}\n\t},\n\n\t/**\n\t * Override 'trigger' to queue 'change' and 'change:*' events\n\t */\n\ttrigger: function( eventName ) {\n\t\tif ( eventName.length > 5 && eventName.indexOf( 'change' ) === 0 ) {\n\t\t\tvar dit = this,\n\t\t\t\targs = arguments;\n\n\t\t\tif ( !module.eventQueue.isLocked() ) {\n\t\t\t\t// If we're not in a more complicated nested scenario, fire the change event right away\n\t\t\t\tBackbone.Model.prototype.trigger.apply( dit, args );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmodule.eventQueue.add( function() {\n\t\t\t\t\t// Determine if the `change` event is still valid, now that all relations are populated\n\t\t\t\t\tvar changed = true;\n\t\t\t\t\tif ( eventName === 'change' ) {\n\t\t\t\t\t\t// `hasChanged` may have gotten reset by nested calls to `set`.\n\t\t\t\t\t\tchanged = dit.hasChanged() || dit._attributeChangeFired;\n\t\t\t\t\t\tdit._attributeChangeFired = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar attr = eventName.slice( 7 ),\n\t\t\t\t\t\t\trel = dit.getRelation( attr );\n\n\t\t\t\t\t\tif ( rel ) {\n\t\t\t\t\t\t\t// If `attr` is a relation, `change:attr` get triggered from `Relation.onChange`.\n\t\t\t\t\t\t\t// These take precedence over `change:attr` events triggered by `Model.set`.\n\t\t\t\t\t\t\t// The relation sets a fourth attribute to `true`. If this attribute is present,\n\t\t\t\t\t\t\t// continue triggering this event; otherwise, it's from `Model.set` and should be stopped.\n\t\t\t\t\t\t\tchanged = ( args[ 4 ] === true );\n\n\t\t\t\t\t\t\t// If this event was triggered by a relation, set the right value in `this.changed`\n\t\t\t\t\t\t\t// (a Collection or Model instead of raw data).\n\t\t\t\t\t\t\tif ( changed ) {\n\t\t\t\t\t\t\t\tdit.changed[ attr ] = args[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Otherwise, this event is from `Model.set`. If the relation doesn't report a change,\n\t\t\t\t\t\t\t// remove attr from `dit.changed` so `hasChanged` doesn't take it into account.\n\t\t\t\t\t\t\telse if ( !rel.changed ) {\n\t\t\t\t\t\t\t\tdelete dit.changed[ attr ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( changed ) {\n\t\t\t\t\t\t\tdit._attributeChangeFired = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tchanged && Backbone.Model.prototype.trigger.apply( dit, args );\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if ( eventName === 'destroy' ) {\n\t\t\tBackbone.Model.prototype.trigger.apply( this, arguments );\n\t\t\tmodule.store.unregister( this );\n\t\t}\n\t\telse {\n\t\t\tBackbone.Model.prototype.trigger.apply( this, arguments );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Initialize Relations present in this.relations; determine the type (HasOne/HasMany), then creates a new instance.\n\t * Invoked in the first call so 'set' (which is made from the Backbone.Model constructor).\n\t */\n\tinitializeRelations: function( options ) {\n\t\tthis.acquire(); // Setting up relations often also involve calls to 'set', and we only want to enter this function once\n\t\tthis._relations = {};\n\n\t\t_.each( this.relations || [], function( rel ) {\n\t\t\tmodule.store.initializeRelation( this, rel, options );\n\t\t}, this );\n\n\t\tthis._isInitialized = true;\n\t\tthis.release();\n\t\tthis.processQueue();\n\t},\n\n\t/**\n\t * When new values are set, notify this model's relations (also if options.silent is set).\n\t * (called from `set`; Relation.setRelated locks this model before calling 'set' on it to prevent loops)\n\t * @param {Object} [changedAttrs]\n\t * @param {Object} [options]\n\t */\n\tupdateRelations: function( changedAttrs, options ) {\n\t\tif ( this._isInitialized && !this.isLocked() ) {\n\t\t\t_.each( this._relations, function( rel ) {\n\t\t\t\tif ( !changedAttrs || ( rel.keySource in changedAttrs || rel.key in changedAttrs ) ) {\n\t\t\t\t\t// Fetch data in `rel.keySource` if data got set in there, or `rel.key` otherwise\n\t\t\t\t\tvar value = this.attributes[ rel.keySource ] || this.attributes[ rel.key ],\n\t\t\t\t\t\tattr = changedAttrs && ( changedAttrs[ rel.keySource ] || changedAttrs[ rel.key ] );\n\n\t\t\t\t\t// Update a relation if its value differs from this model's attributes, or it's been explicitly nullified.\n\t\t\t\t\t// Which can also happen before the originally intended related model has been found (`val` is null).\n\t\t\t\t\tif ( rel.related !== value || ( value === null && attr === null ) ) {\n\t\t\t\t\t\tthis.trigger( 'relational:change:' + rel.key, this, value, options || {} );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Explicitly clear 'keySource', to prevent a leaky abstraction if 'keySource' differs from 'key'.\n\t\t\t\tif ( rel.keySource !== rel.key ) {\n\t\t\t\t\tdelete this.attributes[ rel.keySource ];\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\t},\n\n\t/**\n\t * Either add to the queue (if we're not initialized yet), or execute right away.\n\t */\n\tqueue: function( func ) {\n\t\tthis._queue.add( func );\n\t},\n\n\t/**\n\t * Process _queue\n\t */\n\tprocessQueue: function() {\n\t\tif ( this._isInitialized && !this._deferProcessing && this._queue.isBlocked() ) {\n\t\t\tthis._queue.unblock();\n\t\t}\n\t},\n\n\t/**\n\t * Get a specific relation.\n\t * @param {string} attr The relation key to look for.\n\t * @return {Backbone.Relation} An instance of 'Backbone.Relation', if a relation was found for 'attr', or null.\n\t */\n\tgetRelation: function( attr ) {\n\t\treturn this._relations[ attr ];\n\t},\n\n\t/**\n\t * Get all of the created relations.\n\t * @return {Backbone.Relation[]}\n\t */\n\tgetRelations: function() {\n\t\treturn _.values( this._relations );\n\t},\n\n\n\t/**\n\t * Get a list of ids that will be fetched on a call to `getAsync`.\n\t * @param {string|Backbone.Relation} attr The relation key to fetch models for.\n\t * @param [refresh=false] Add ids for models that are already in the relation, refreshing them?\n\t * @return {Array} An array of ids that need to be fetched.\n\t */\n\tgetIdsToFetch: function( attr, refresh ) {\n\t\tvar rel = attr instanceof module.Relation ? attr : this.getRelation( attr ),\n\t\t\tids = rel ? ( rel.keyIds && rel.keyIds.slice( 0 ) ) || ( ( rel.keyId || rel.keyId === 0 ) ? [ rel.keyId ] : [] ) : [];\n\n\t\t// On `refresh`, add the ids for current models in the relation to `idsToFetch`\n\t\tif ( refresh ) {\n\t\t\tvar models = rel.related && ( rel.related.models || [ rel.related ] );\n\t\t\t_.each( models, function( model ) {\n\t\t\t\tif ( model.id || model.id === 0 ) {\n\t\t\t\t\tids.push( model.id );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn ids;\n\t},\n\n\t/**\n\t * Get related objects. Returns a single promise, which can either resolve immediately (if the related model[s])\n\t * are already present locally, or after fetching the contents of the requested attribute.\n\t * @param {string} attr The relation key to fetch models for.\n\t * @param {Object} [options] Options for 'Backbone.Model.fetch' and 'Backbone.sync'.\n\t * @param {Boolean} [options.refresh=false] Fetch existing models from the server as well (in order to update them).\n\t * @return {jQuery.Deferred} A jQuery promise object. When resolved, its `done` callback will be called with\n\t *  contents of `attr`.\n\t */\n\tgetAsync: function( attr, options ) {\n\t\t// Set default `options` for fetch\n\t\toptions = _.extend( { add: true, remove: false, refresh: false }, options );\n\n\t\tvar dit = this,\n\t\t\trequests = [],\n\t\t\trel = this.getRelation( attr ),\n\t\t\tidsToFetch = rel && this.getIdsToFetch( rel, options.refresh ),\n\t\t\tcoll = rel.related instanceof module.Collection ? rel.related : rel.relatedCollection;\n\n\t\tif ( idsToFetch && idsToFetch.length ) {\n\t\t\tvar models = [],\n\t\t\t\tcreatedModels = [],\n\t\t\t\tsetUrl,\n\t\t\t\tcreateModels = function() {\n\t\t\t\t\t// Find (or create) a model for each one that is to be fetched\n\t\t\t\t\tmodels = _.map( idsToFetch, function( id ) {\n\t\t\t\t\t\tvar model = rel.relatedModel.findModel( id );\n\n\t\t\t\t\t\tif ( !model ) {\n\t\t\t\t\t\t\tvar attrs = {};\n\t\t\t\t\t\t\tattrs[ rel.relatedModel.prototype.idAttribute ] = id;\n\t\t\t\t\t\t\tmodel = rel.relatedModel.findOrCreate( attrs, options );\n\t\t\t\t\t\t\tcreatedModels.push( model );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn model;\n\t\t\t\t\t}, this );\n\t\t\t\t};\n\n\t\t\t// Try if the 'collection' can provide a url to fetch a set of models in one request.\n\t\t\t// This assumes that when 'module.Collection.url' is a function, it can handle building of set urls.\n\t\t\t// To make sure it can, test if the url we got by supplying a list of models to fetch is different from\n\t\t\t// the one supplied for the default fetch action (without args to 'url').\n\t\t\tif ( coll instanceof module.Collection && _.isFunction( coll.url ) ) {\n\t\t\t\tvar defaultUrl = coll.url();\n\t\t\t\tsetUrl = coll.url( idsToFetch );\n\n\t\t\t\tif ( setUrl === defaultUrl ) {\n\t\t\t\t\tcreateModels();\n\t\t\t\t\tsetUrl = coll.url( models );\n\n\t\t\t\t\tif ( setUrl === defaultUrl ) {\n\t\t\t\t\t\tsetUrl = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( setUrl ) {\n\t\t\t\t// Do a single request to fetch all models\n\t\t\t\tvar opts = _.defaults(\n\t\t\t\t\t{\n\t\t\t\t\t\terror: function() {\n\t\t\t\t\t\t\t_.each( createdModels, function( model ) {\n\t\t\t\t\t\t\t\tmodel.trigger( 'destroy', model, model.collection, options );\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\toptions.error && options.error.apply( models, arguments );\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: setUrl\n\t\t\t\t\t},\n\t\t\t\t\toptions\n\t\t\t\t);\n\n\t\t\t\trequests = [ coll.fetch( opts ) ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Make a request per model to fetch\n\t\t\t\tif  ( !models.length ) {\n\t\t\t\t\tcreateModels();\n\t\t\t\t}\n\n\t\t\t\trequests = _.map( models, function( model ) {\n\t\t\t\t\tvar opts = _.defaults(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror: function() {\n\t\t\t\t\t\t\t\tif ( _.contains( createdModels, model ) ) {\n\t\t\t\t\t\t\t\t\tmodel.trigger( 'destroy', model, model.collection, options );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\toptions.error && options.error.apply( models, arguments );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\toptions\n\t\t\t\t\t);\n\t\t\t\t\treturn model.fetch( opts );\n\t\t\t\t}, this );\n\t\t\t}\n\t\t}\n\n\t\treturn this.deferArray(requests).then(\n\t\t\tfunction() {\n\t\t\t\treturn Backbone.Model.prototype.get.call( dit, attr );\n\t\t\t}\n\t\t);\n\t},\n\n\tdeferArray: function(deferArray) {\n\t\treturn Backbone.$.when.apply(null, deferArray);\n\t},\n\n\tset: function( key, value, options ) {\n\t\tmodule.eventQueue.block();\n\n\t\t// Duplicate backbone's behavior to allow separate key/value parameters, instead of a single 'attributes' object\n\t\tvar attributes,\n\t\t\tresult;\n\n\t\tif ( _.isObject( key ) || key == null ) {\n\t\t\tattributes = key;\n\t\t\toptions = value;\n\t\t}\n\t\telse {\n\t\t\tattributes = {};\n\t\t\tattributes[ key ] = value;\n\t\t}\n\n\t\ttry {\n\t\t\tvar id = this.id,\n\t\t\t\tnewId = attributes && this.idAttribute in attributes && attributes[ this.idAttribute ];\n\n\t\t\t// Check if we're not setting a duplicate id before actually calling `set`.\n\t\t\tmodule.store.checkId( this, newId );\n\n\t\t\tresult = Backbone.Model.prototype.set.apply( this, arguments );\n\n\t\t\t// Ideal place to set up relations, if this is the first time we're here for this model\n\t\t\tif ( !this._isInitialized && !this.isLocked() ) {\n\t\t\t\tthis.constructor.initializeModelHierarchy();\n\n\t\t\t\t// Only register models that have an id. A model will be registered when/if it gets an id later on.\n\t\t\t\tif ( newId || newId === 0 ) {\n\t\t\t\t\tmodule.store.register( this );\n\t\t\t\t}\n\n\t\t\t\tthis.initializeRelations( options );\n\t\t\t}\n\t\t\t// The store should know about an `id` update asap\n\t\t\telse if ( newId && newId !== id ) {\n\t\t\t\tmodule.store.update( this );\n\t\t\t}\n\n\t\t\tif ( attributes ) {\n\t\t\t\tthis.updateRelations( attributes, options );\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\t// Try to run the global queue holding external events\n\t\t\tmodule.eventQueue.unblock();\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tclone: function() {\n\t\tvar attributes = _.clone( this.attributes );\n\t\tif ( !_.isUndefined( attributes[ this.idAttribute ] ) ) {\n\t\t\tattributes[ this.idAttribute ] = null;\n\t\t}\n\n\t\t_.each( this.getRelations(), function( rel ) {\n\t\t\tdelete attributes[ rel.key ];\n\t\t});\n\n\t\treturn new this.constructor( attributes );\n\t},\n\n\t/**\n\t * Convert relations to JSON, omits them when required\n\t */\n\ttoJSON: function( options ) {\n\t\t// If this Model has already been fully serialized in this branch once, return to avoid loops\n\t\tif ( this.isLocked() ) {\n\t\t\treturn this.id;\n\t\t}\n\n\t\tthis.acquire();\n\t\tvar json = Backbone.Model.prototype.toJSON.call( this, options );\n\n\t\tif ( this.constructor._superModel && !( this.constructor._subModelTypeAttribute in json ) ) {\n\t\t\tjson[ this.constructor._subModelTypeAttribute ] = this.constructor._subModelTypeValue;\n\t\t}\n\n\t\t_.each( this._relations, function( rel ) {\n\t\t\tvar related = json[ rel.key ],\n\t\t\t\tincludeInJSON = rel.options.includeInJSON,\n\t\t\t\tvalue = null;\n\n\t\t\tif ( includeInJSON === true ) {\n\t\t\t\tif ( related && _.isFunction( related.toJSON ) ) {\n\t\t\t\t\tvalue = related.toJSON( options );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( _.isString( includeInJSON ) ) {\n\t\t\t\tif ( related instanceof module.Collection ) {\n\t\t\t\t\tvalue = related.pluck( includeInJSON );\n\t\t\t\t}\n\t\t\t\telse if ( related instanceof Backbone.Model ) {\n\t\t\t\t\tvalue = related.get( includeInJSON );\n\t\t\t\t}\n\n\t\t\t\t// Add ids for 'unfound' models if includeInJSON is equal to (only) the relatedModel's `idAttribute`\n\t\t\t\tif ( includeInJSON === rel.relatedModel.prototype.idAttribute ) {\n\t\t\t\t\tif ( rel instanceof module.HasMany ) {\n\t\t\t\t\t\tvalue = value.concat( rel.keyIds );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( rel instanceof module.HasOne ) {\n\t\t\t\t\t\tvalue = value || rel.keyId;\n\n\t\t\t\t\t\tif ( !value && !_.isObject( rel.keyContents ) ) {\n\t\t\t\t\t\t\tvalue = rel.keyContents || null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( _.isArray( includeInJSON ) ) {\n\t\t\t\tif ( related instanceof module.Collection ) {\n\t\t\t\t\tvalue = [];\n\t\t\t\t\trelated.each( function( model ) {\n\t\t\t\t\t\tvar curJson = {};\n\t\t\t\t\t\t_.each( includeInJSON, function( key ) {\n\t\t\t\t\t\t\tcurJson[ key ] = model.get( key );\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvalue.push( curJson );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if ( related instanceof Backbone.Model ) {\n\t\t\t\t\tvalue = {};\n\t\t\t\t\t_.each( includeInJSON, function( key ) {\n\t\t\t\t\t\tvalue[ key ] = related.get( key );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdelete json[ rel.key ];\n\t\t\t}\n\n\t\t\t// In case of `wait: true`, Backbone will simply push whatever's passed into `save` into attributes.\n\t\t\t// We'll want to get this information into the JSON, even if it doesn't conform to our normal\n\t\t\t// expectations of what's contained in it (no model/collection for a relation, etc).\n\t\t\tif ( value === null && options && options.wait ) {\n\t\t\t\tvalue = related;\n\t\t\t}\n\n\t\t\tif ( includeInJSON ) {\n\t\t\t\tjson[ rel.keyDestination ] = value;\n\t\t\t}\n\n\t\t\tif ( rel.keyDestination !== rel.key ) {\n\t\t\t\tdelete json[ rel.key ];\n\t\t\t}\n\t\t});\n\n\t\tthis.release();\n\t\treturn json;\n\t}\n},\n{\n\t/**\n\t *\n\t * @param superModel\n\t * @returns {Backbone.Relational.Model.constructor}\n\t */\n\tsetup: function( superModel ) {\n\t\t// We don't want to share a relations array with a parent, as this will cause problems with reverse\n\t\t// relations. Since `relations` may also be a property or function, only use slice if we have an array.\n\t\tthis.prototype.relations = ( this.prototype.relations || [] ).slice( 0 );\n\n\t\tthis._subModels = {};\n\t\tthis._superModel = null;\n\n\t\t// If this model has 'subModelTypes' itself, remember them in the store\n\t\tif ( this.prototype.hasOwnProperty( 'subModelTypes' ) ) {\n\t\t\tmodule.store.addSubModels( this.prototype.subModelTypes, this );\n\t\t}\n\t\t// The 'subModelTypes' property should not be inherited, so reset it.\n\t\telse {\n\t\t\tthis.prototype.subModelTypes = null;\n\t\t}\n\n\t\t// Initialize all reverseRelations that belong to this new model.\n\t\t_.each( this.prototype.relations || [], function( rel ) {\n\t\t\tif ( !rel.model ) {\n\t\t\t\trel.model = this;\n\t\t\t}\n\n\t\t\tif ( rel.reverseRelation && rel.model === this ) {\n\t\t\t\tvar preInitialize = true;\n\t\t\t\tif ( _.isString( rel.relatedModel ) ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * The related model might not be defined for two reasons\n\t\t\t\t\t *  1. it is related to itself\n\t\t\t\t\t *  2. it never gets defined, e.g. a typo\n\t\t\t\t\t *  3. the model hasn't been defined yet, but will be later\n\t\t\t\t\t * In neither of these cases do we need to pre-initialize reverse relations.\n\t\t\t\t\t * However, for 3. (which is, to us, indistinguishable from 2.), we do need to attempt\n\t\t\t\t\t * setting up this relation again later, in case the related model is defined later.\n\t\t\t\t\t */\n\t\t\t\t\tvar relatedModel = module.store.getObjectByName( rel.relatedModel );\n\t\t\t\t\tpreInitialize = relatedModel && ( relatedModel.prototype instanceof module.Model );\n\t\t\t\t}\n\n\t\t\t\tif ( preInitialize ) {\n\t\t\t\t\tmodule.store.initializeRelation( null, rel );\n\t\t\t\t}\n\t\t\t\telse if ( _.isString( rel.relatedModel ) ) {\n\t\t\t\t\tmodule.store.addOrphanRelation( rel );\n\t\t\t\t}\n\t\t\t}\n\t\t}, this );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Create a 'Backbone.Model' instance based on 'attributes'.\n\t * @param {Object} attributes\n\t * @param {Object} [options]\n\t * @return {Backbone.Model}\n\t */\n\tbuild: function( attributes, options ) {\n\t\t// 'build' is a possible entrypoint; it's possible no model hierarchy has been determined yet.\n\t\tthis.initializeModelHierarchy();\n\n\t\t// Determine what type of (sub)model should be built if applicable.\n\t\tvar model = this._findSubModelType( this, attributes ) || this;\n\n\t\treturn new model( attributes, options );\n\t},\n\n\t/**\n\t * Determines what type of (sub)model should be built if applicable.\n\t * Looks up the proper subModelType in 'this._subModels', recursing into\n\t * types until a match is found.  Returns the applicable 'Backbone.Model'\n\t * or null if no match is found.\n\t * @param {Backbone.Model} type\n\t * @param {Object} attributes\n\t * @return {Backbone.Model}\n\t */\n\t_findSubModelType: function( type, attributes ) {\n\t\tif ( type._subModels && type.prototype.subModelTypeAttribute in attributes ) {\n\t\t\tvar subModelTypeAttribute = attributes[ type.prototype.subModelTypeAttribute ];\n\t\t\tvar subModelType = type._subModels[ subModelTypeAttribute ];\n\t\t\tif ( subModelType ) {\n\t\t\t\treturn subModelType;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Recurse into subModelTypes to find a match\n\t\t\t\tfor ( subModelTypeAttribute in type._subModels ) {\n\t\t\t\t\tsubModelType = this._findSubModelType( type._subModels[ subModelTypeAttribute ], attributes );\n\t\t\t\t\tif ( subModelType ) {\n\t\t\t\t\t\treturn subModelType;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\t/**\n\t *\n\t */\n\tinitializeModelHierarchy: function() {\n\t\t// Inherit any relations that have been defined in the parent model.\n\t\tthis.inheritRelations();\n\n\t\t// If we came here through 'build' for a model that has 'subModelTypes' then try to initialize the ones that\n\t\t// haven't been resolved yet.\n\t\tif ( this.prototype.subModelTypes ) {\n\t\t\tvar resolvedSubModels = _.keys( this._subModels );\n\t\t\tvar unresolvedSubModels = _.omit( this.prototype.subModelTypes, resolvedSubModels );\n\t\t\t_.each( unresolvedSubModels, function( subModelTypeName ) {\n\t\t\t\tvar subModelType = module.store.getObjectByName( subModelTypeName );\n\t\t\t\tsubModelType && subModelType.initializeModelHierarchy();\n\t\t\t});\n\t\t}\n\t},\n\n\tinheritRelations: function() {\n\t\t// Bail out if we've been here before.\n\t\tif ( !_.isUndefined( this._superModel ) && !_.isNull( this._superModel ) ) {\n\t\t\treturn;\n\t\t}\n\t\t// Try to initialize the _superModel.\n\t\tmodule.store.setupSuperModel( this );\n\n\t\t// If a superModel has been found, copy relations from the _superModel if they haven't been inherited automatically\n\t\t// (due to a redefinition of 'relations').\n\t\tif ( this._superModel ) {\n\t\t\t// The _superModel needs a chance to initialize its own inherited relations before we attempt to inherit relations\n\t\t\t// from the _superModel. You don't want to call 'initializeModelHierarchy' because that could cause sub-models of\n\t\t\t// this class to inherit their relations before this class has had chance to inherit it's relations.\n\t\t\tthis._superModel.inheritRelations();\n\t\t\tif ( this._superModel.prototype.relations ) {\n\t\t\t\t// Find relations that exist on the '_superModel', but not yet on this model.\n\t\t\t\tvar inheritedRelations = _.filter( this._superModel.prototype.relations || [], function( superRel ) {\n\t\t\t\t\treturn !_.any( this.prototype.relations || [], function( rel ) {\n\t\t\t\t\t\treturn superRel.relatedModel === rel.relatedModel && superRel.key === rel.key;\n\t\t\t\t\t}, this );\n\t\t\t\t}, this );\n\n\t\t\t\tthis.prototype.relations = inheritedRelations.concat( this.prototype.relations );\n\t\t\t}\n\t\t}\n\t\t// Otherwise, make sure we don't get here again for this type by making '_superModel' false so we fail the\n\t\t// isUndefined/isNull check next time.\n\t\telse {\n\t\t\tthis._superModel = false;\n\t\t}\n\t},\n\n\t/**\n\t * Find an instance of `this` type in 'Backbone.store'.\n\t * A new model is created if no matching model is found, `attributes` is an object, and `options.create` is true.\n\t * - If `attributes` is a string or a number, `findOrCreate` will query the `store` and return a model if found.\n\t * - If `attributes` is an object and is found in the store, the model will be updated with `attributes` unless `options.merge` is `false`.\n\t * @param {Object|String|Number} attributes Either a model's id, or the attributes used to create or update a model.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.create=true]\n\t * @param {Boolean} [options.merge=true]\n\t * @param {Boolean} [options.parse=false]\n\t * @return {Backbone.Relational.Model}\n\t */\n\tfindOrCreate: function( attributes, options ) {\n\t\toptions || ( options = {} );\n\t\tvar parsedAttributes = ( _.isObject( attributes ) && options.parse && this.prototype.parse ) ?\n\t\t\tthis.prototype.parse( _.clone( attributes ), options ) : attributes;\n\n\t\t// If specified, use a custom `find` function to match up existing models to the given attributes.\n\t\t// Otherwise, try to find an instance of 'this' model type in the store\n\t\tvar model = this.findModel( parsedAttributes );\n\n\t\t// If we found an instance, update it with the data in 'item' (unless 'options.merge' is false).\n\t\t// If not, create an instance (unless 'options.create' is false).\n\t\tif ( _.isObject( attributes ) ) {\n\t\t\tif ( model && options.merge !== false ) {\n\t\t\t\t// Make sure `options.collection` and `options.url` doesn't cascade to nested models\n\t\t\t\tdelete options.collection;\n\t\t\t\tdelete options.url;\n\n\t\t\t\tmodel.set( parsedAttributes, options );\n\t\t\t}\n\t\t\telse if ( !model && options.create !== false ) {\n\t\t\t\tmodel = this.build( parsedAttributes, _.defaults( { parse: false }, options ) );\n\t\t\t}\n\t\t}\n\n\t\treturn model;\n\t},\n\n\t/**\n\t * Find an instance of `this` type in 'Backbone.store'.\n\t * - If `attributes` is a string or a number, `find` will query the `store` and return a model if found.\n\t * - If `attributes` is an object and is found in the store, the model will be updated with `attributes` unless `options.merge` is `false`.\n\t * @param {Object|String|Number} attributes Either a model's id, or the attributes used to create or update a model.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.merge=true]\n\t * @param {Boolean} [options.parse=false]\n\t * @return {Backbone.Relational.Model}\n\t */\n\tfind: function( attributes, options ) {\n\t\toptions || ( options = {} );\n\t\toptions.create = false;\n\t\treturn this.findOrCreate( attributes, options );\n\t},\n\n\t/**\n\t * A hook to override the matching when updating (or creating) a model.\n\t * The default implementation is to look up the model by id in the store.\n\t * @param {Object} attributes\n\t * @returns {Backbone.Relational.Model}\n\t */\n\tfindModel: function( attributes ) {\n\t\treturn module.store.find( this, attributes );\n\t}\n});\n_.extend( module.Model.prototype, module.Semaphore );\n\n/**\n * Override module.Collection._prepareModel, so objects will be built using the correct type\n * if the collection.model has subModels.\n * Attempts to find a model for `attrs` in Backbone.store through `findOrCreate`\n * (which sets the new properties on it if found), or instantiates a new model.\n */\nmodule.Collection.prototype.__prepareModel = module.Collection.prototype._prepareModel;\nmodule.Collection.prototype._prepareModel = function( attrs, options ) {\n\tvar model;\n\n\tif ( attrs instanceof Backbone.Model ) {\n\t\tif ( !attrs.collection ) {\n\t\t\tattrs.collection = this;\n\t\t}\n\t\tmodel = attrs;\n\t}\n\telse {\n\t\toptions = options ? _.clone( options ) : {};\n\t\toptions.collection = this;\n\n\t\tif ( typeof this.model.findOrCreate !== 'undefined' ) {\n\t\t\tmodel = this.model.findOrCreate( attrs, options );\n\t\t}\n\t\telse {\n\t\t\tmodel = new this.model( attrs, options );\n\t\t}\n\n\t\tif ( model && model.validationError ) {\n\t\t\tthis.trigger( 'invalid', this, attrs, options );\n\t\t\tmodel = false;\n\t\t}\n\t}\n\n\treturn model;\n};\n\n\n/**\n * Override module.Collection.set, so we'll create objects from attributes where required,\n * and update the existing models. Also, trigger 'relational:add'.\n */\nvar set = module.Collection.prototype.__set = module.Collection.prototype.set;\nmodule.Collection.prototype.set = function( models, options ) {\n\t// Short-circuit if this Collection doesn't hold RelationalModels\n\tif ( !( this.model.prototype instanceof module.Model ) ) {\n\t\treturn set.call( this, models, options );\n\t}\n\n\tif ( options && options.parse ) {\n\t\tmodels = this.parse( models, options );\n\t}\n\n\tvar singular = !_.isArray( models ),\n\t\tnewModels = [],\n\t\ttoAdd = [],\n\t\tmodel = null;\n\n\tmodels = singular ? ( models ? [ models ] : [] ) : _.clone( models );\n\n\t//console.debug( 'calling add on coll=%o; model=%o, options=%o', this, models, options );\n\tfor ( var i = 0; i < models.length; i++ ) {\n\t\tmodel = models[i];\n\t\tif ( !( model instanceof Backbone.Model ) ) {\n\t\t\tmodel = module.Collection.prototype._prepareModel.call( this, model, options );\n\t\t}\n\n\t\tif ( model ) {\n\t\t\ttoAdd.push( model );\n\n\t\t\tif ( !( this.get( model ) || this.get( model.cid ) ) ) {\n\t\t\t\tnewModels.push( model );\n\t\t\t}\n\t\t\t// If we arrive in `add` while performing a `set` (after a create, so the model gains an `id`),\n\t\t\t// we may get here before `_onModelEvent` has had the chance to update `_byId`.\n\t\t\telse if ( model.id != null ) {\n\t\t\t\tthis._byId[ model.id ] = model;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Add 'models' in a single batch, so the original add will only be called once (and thus 'sort', etc).\n\t// If `parse` was specified, the collection and contained models have been parsed now.\n\ttoAdd = singular ? ( toAdd.length ? toAdd[ 0 ] : null ) : toAdd;\n\tvar result = set.call( this, toAdd, _.defaults( { merge: false, parse: false }, options ) );\n\n\tfor ( i = 0; i < newModels.length; i++ ) {\n\t\tmodel = newModels[i];\n\t\t// Fire a `relational:add` event for any model in `newModels` that has actually been added to the collection.\n\t\tif ( this.get( model ) || this.get( model.cid ) ) {\n\t\t\tthis.trigger( 'relational:add', model, this, options );\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Override 'Backbone.Collection._removeModels' to trigger 'relational:remove'.\n */\nvar _removeModels = Backbone.Collection.prototype.___removeModels = Backbone.Collection.prototype._removeModels;\nBackbone.Collection.prototype._removeModels = function( models, options ) {\n\t// Short-circuit if this Collection doesn't hold RelationalModels\n\tif ( !( this.model.prototype instanceof module.Model ) ) {\n\t\treturn _removeModels.call( this, models, options );\n\t}\n\n\tvar toRemove = [];\n\n\t//console.debug('calling remove on coll=%o; models=%o, options=%o', this, models, options );\n\t_.each( models, function( model ) {\n\t\tmodel = this.get( model ) || ( model && this.get( model.cid ) );\n\t\tmodel && toRemove.push( model );\n\t}, this );\n\n\tvar result = _removeModels.call( this, toRemove, options );\n\n\t_.each( toRemove, function( model ) {\n\t\tthis.trigger( 'relational:remove', model, this, options );\n\t}, this );\n\n\treturn result;\n};\n\n/**\n * Override 'module.Collection.reset' to trigger 'relational:reset'.\n */\nvar reset = module.Collection.prototype.__reset = module.Collection.prototype.reset;\nmodule.Collection.prototype.reset = function( models, options ) {\n\toptions = _.extend( { merge: true }, options );\n\tvar result = reset.call( this, models, options );\n\n\tif ( this.model.prototype instanceof module.Model ) {\n\t\tthis.trigger( 'relational:reset', this, options );\n\t}\n\n\treturn result;\n};\n\n/**\n * Override 'module.Collection.sort' to trigger 'relational:reset'.\n */\nvar sort = module.Collection.prototype.__sort = module.Collection.prototype.sort;\nmodule.Collection.prototype.sort = function( options ) {\n\tvar result = sort.call( this, options );\n\n\tif ( this.model.prototype instanceof module.Model ) {\n\t\tthis.trigger( 'relational:reset', this, options );\n\t}\n\n\treturn result;\n};\n\n/**\n * Override 'module.Collection.trigger' so 'add', 'remove' and 'reset' events are queued until relations\n * are ready.\n */\nvar trigger = module.Collection.prototype.__trigger = module.Collection.prototype.trigger;\nmodule.Collection.prototype.trigger = function( eventName ) {\n\t// Short-circuit if this Collection doesn't hold RelationalModels\n\tif ( !( this.model.prototype instanceof module.Model ) ) {\n\t\treturn trigger.apply( this, arguments );\n\t}\n\n\tif ( eventName === 'add' || eventName === 'remove' || eventName === 'reset' || eventName === 'sort' ) {\n\t\tvar dit = this,\n\t\t\targs = arguments;\n\n\t\tif ( _.isObject( args[ 3 ] ) ) {\n\t\t\targs = _.toArray( args );\n\t\t\t// the fourth argument is the option object.\n\t\t\t// we need to clone it, as it could be modified while we wait on the eventQueue to be unblocked\n\t\t\targs[ 3 ] = _.clone( args[ 3 ] );\n\t\t}\n\n\t\tmodule.eventQueue.add( function() {\n\t\t\ttrigger.apply( dit, args );\n\t\t});\n\t}\n\telse {\n\t\ttrigger.apply( this, arguments );\n\t}\n\n\treturn this;\n};\n\n// Override .extend() to automatically call .setup()\nmodule.Model.extend = function( protoProps, classProps ) {\n\tvar child = Backbone.Model.extend.apply( this, arguments );\n\n\tchild.setup( this );\n\n\treturn child;\n};\n\nexport default module;\n"],"names":["module"],"mappings":"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","sourceRoot":"/source/"}